package modchu.model;import java.util.Date;import java.util.Map;import java.util.concurrent.ConcurrentHashMap;import modchu.lib.Modchu_CastHelper;import modchu.lib.Modchu_Debug;import modchu.lib.Modchu_IEntityCapsBase;import modchu.lib.Modchu_Main;import modchu.lib.Modchu_Reflect;public class ModchuModel_ModelDataMaster {	public static ModchuModel_ModelDataMaster instance = new ModchuModel_ModelDataMaster();	protected ConcurrentHashMap<Object, ModchuModel_ModelDataBase> dataMap = new ConcurrentHashMap();	protected ConcurrentHashMap dataLMMCapsMap = new ConcurrentHashMap();	public boolean resetFlag = false;	//public Date timeDate;	public ModchuModel_ModelDataMaster() {	}	public ModchuModel_ModelDataBase getPlayerData(Object o) {		try {			if (o != null); else {				//Modchu_Debug.Debug("ModchuModel_ModelDataMaster o == null return !!");				return null;			}			//Modchu_Debug.Debug("ModchuModel_ModelDataMaster 1");			Object entity = null;			ModchuModel_ModelDataBase data = null;			boolean isLMMX = ModchuModel_Main.isLMMX;			Class IModelCaps = Modchu_Reflect.loadClass(isLMMX ? "mmmlibx.lib.multiModel.model.mc162.IModelCaps" : Modchu_Main.getMinecraftVersion() > 169 ? "mmm.lib.multiModel.model.mc162.IModelCaps" : "MMM_IModelCaps", -1);			//Modchu_Debug.Debug("ModchuModel_ModelDataMaster 2 IModelCaps ="+IModelCaps);			boolean iModelCapsFlag = IModelCaps != null							&& IModelCaps.isInstance(o);			//Modchu_Debug.Debug("ModchuModel_ModelDataMaster 3 ModchuModel_IEntityCapsFlag ="+ModchuModel_IEntityCapsFlag);			//Modchu_Debug.mDebug1("ModchuModel_ModelDataMaster ModchuModel_IEntityCapsFlag="+ModchuModel_IEntityCapsFlag);			if (iModelCapsFlag) {				Map<String, Integer> caps = (Map<String, Integer>) Modchu_Reflect.invokeMethod(o.getClass(), "getModelCaps", o);				//Modchu_Debug.mDebug1("ModchuModel_ModelDataMaster ModchuModel_IEntityCapsFlag o.getClass()="+o.getClass());				//Modchu_Debug.mDebug1("ModchuModel_ModelDataMaster ModchuModel_IEntityCapsFlag caps="+caps);				//Modchu_Debug.mDebug1("ModchuModel_ModelDataMaster ModchuModel_IEntityCapsFlag caps.get(Entity)="+caps.get("Entity"));				//Modchu_Debug.mDebug1("ModchuModel_ModelDataMaster ModchuModel_IEntityCapsFlag getMethod="+Modchu_Reflect.getMethod(ModchuModel_IEntityCaps, "getCapsValue", new Class[]{ int.class, Object[].class }));				entity = Modchu_Reflect.getFieldObject(o.getClass(), "owner", o, -1);				if (entity != null); else entity = Modchu_Reflect.invokeMethod(IModelCaps, "getCapsValue", new Class[]{ int.class, Object[].class }, o, new Object[]{ caps.get("Entity"), (Object[]) null });				//Modchu_Debug.mDebug1("ModchuModel_ModelDataMaster ModchuModel_IEntityCapsFlag entity="+entity);				if (entity != null) data = dataMap.get(entity);			} else data = dataMap.get(o);			//Modchu_Debug.Debug("ModchuModel_ModelDataMaster 5 data ="+data);			boolean b = false;			if (data != null) {				int initFlag = data.getCapsValueInt(data.caps_initFlag);				if (initFlag < 2) {					//Modchu_Debug.lDebug("ModchuModel_ModelDataMaster getPlayerData dataMap.get caps_initFlag < 2 initFlag="+initFlag);					initFlag++;					data.setCapsValue(data.caps_initFlag, initFlag);					b = true;				}			} else {				//Modchu_Debug.lDebug("ModchuModel_ModelDataMaster getPlayerData dataMap.get data == null");				b = true;			}			if (b					| resetFlag) {				if (resetFlag) {					resetFlag = false;					clearDataMap();					data = null;				}				//Modchu_Debug.Debug("ModchuModel_ModelDataMaster 6");				data = newPlayerData(o, data);				//Modchu_Debug.Debug("ModchuModel_ModelDataMaster 7 data ="+data);				if (data != null) {					//Modchu_Debug.mDebug("ModchuModel_ModelDataMaster getPlayerData dataMap.put o="+o);					if (data.getCapsValueInt(data.caps_initFlag) == 1) data.setCapsValue(data.caps_initFlag, 2);					if (iModelCapsFlag) {						if (entity != null) {							dataMap.put(entity, data);							Modchu_Debug.lDebug1("ModchuModel_ModelDataMaster getPlayerData ModchuModel_IEntityCapsFlag data.put ok.");						} else {							Modchu_Debug.lDebug1("ModchuModel_ModelDataMaster getPlayerData dataMap.put entity == null !!");						}					} else {						dataMap.put(o, data);						Modchu_Debug.lDebug1("ModchuModel_ModelDataMaster getPlayerData data.put ok.");					}				}			}			//Modchu_Debug.Debug("ModchuModel_ModelDataMaster end. return data="+data);			return data;		} catch(Error e) {			e.printStackTrace();		} catch(Exception e) {			e.printStackTrace();		}		//Modchu_Debug.Debug("ModchuModel_ModelDataMaster end. return null !!");		return null;	}	public ModchuModel_ModelDataBase newPlayerData(Object o) {		return newPlayerData(o, null);	}	public ModchuModel_ModelDataBase newPlayerData(Object o, ModchuModel_ModelDataBase data) {		Modchu_Debug.Debug("ModchuModel_ModelDataMaster newPlayerData");		if (o != null); else {			Modchu_Debug.Debug("ModchuModel_ModelDataMaster newPlayerData return null !!");			return null;		}		if (data != null); else data = new ModchuModel_ModelDataBase();		Modchu_Debug.Debug("ModchuModel_ModelDataMaster newPlayerData 1 data="+data);		Class ModchuModel_IEntityCaps = Modchu_Reflect.loadClass(ModchuModel_Main.isLMMX ? "mmmlibx.lib.multiModel.model.mc162.IModelCaps" : "MMM_IModelCaps");		Modchu_Debug.Debug("ModchuModel_ModelDataMaster newPlayerData ModchuModel_IEntityCaps="+ModchuModel_IEntityCaps);		if (ModchuModel_IEntityCaps != null				&& ModchuModel_IEntityCaps.isInstance(o)) {			data.setCapsValue(data.caps_subEntityCaps, o);			//Modchu_Debug.mDebug("ModchuModel_ModelDataMaster newPlayerData set o");		} else if (Modchu_Reflect.loadClass("EntityLivingBase").isInstance(o)) {			Modchu_Debug.Debug("ModchuModel_ModelDataMaster newPlayerData 2 EntityLivingBase.isInstance");			data.setCapsValue(data.caps_Entity, o);		} else {			Modchu_Debug.lDebug1("ModchuModel_ModelDataMaster newPlayerData 2 !ModchuModel_IEntityCaps && !isEntityLivingBase o="+o);		}		data = newPlayerDataDefaultSetting(o, data);		Modchu_Debug.Debug("ModchuModel_ModelDataMaster newPlayerData 3 data="+data);		data.setCapsValue(data.caps_initFlag, 2);		Modchu_Debug.Debug("ModchuModel_ModelDataMaster newPlayerData end return data="+data);		return data;	}	public ModchuModel_ModelDataBase newPlayerDataDefaultSetting(Object o, ModchuModel_ModelDataBase data) {		data.setCapsValue(data.caps_freeVariable, "showArmor", true);		data.setCapsValue(data.caps_localFlag, true);		return data;	}	public float getActionSpeed(ModchuModel_ModelDataBase modelData, float f) {/*		World theWorld = Modchu_Main.getTheWorld();		float f = (float)(theWorld.getWorldTime() - modelData.getCapsValueInt(modelData.caps_actionTime));		modelData.setCapsValue(modelData.caps_actionTime, (int) theWorld.getWorldTime());*//*		long timeDate = new Date().getTime();		float f1 = (float)(timeDate - Modchu_CastHelper.Long(modelData.getCapsValue(modelData.caps_actionTime)));		//Modchu_Debug.mDebug("getActionSpeed f="+f);		modelData.setCapsValue(modelData.caps_actionTime, timeDate);		//Modchu_Debug.mDebug("getActionSpeed timeDate="+timeDate+" f="+f);*/		float f1 = f - Modchu_CastHelper.Float(modelData.getCapsValue(modelData.caps_actionTime));		modelData.setCapsValue(modelData.caps_actionTime, f);		//Modchu_Debug.mDebug("getActionSpeed f="+f+" f1="+f1);		return f1;	}	public void clearDataMap() {		dataMap.clear();	}	public void removeDataMap(Object o) {		dataMap.remove(o);	}	public Object getLMMCaps(Object o) {		if (dataLMMCapsMap.containsKey(o)) return dataLMMCapsMap.get(o);		Modchu_IEntityCapsBase entityCaps = o instanceof Modchu_IEntityCapsBase ? (Modchu_IEntityCapsBase) o : null;		if (entityCaps != null); else return o;		Object caps = Modchu_Reflect.newInstance("modchu.lib.lmm.Modchu_LMMEntityCaps", new Class[]{ ModchuModel_ModelDataBase.class, Modchu_Reflect.loadClass("EntityLivingBase") }, new Object[]{ entityCaps, entityCaps.getCapsValue(entityCaps.caps_Entity) });		dataLMMCapsMap.put(entityCaps, caps);		return caps;	}}