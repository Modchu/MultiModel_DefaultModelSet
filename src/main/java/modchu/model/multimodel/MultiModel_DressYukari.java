package modchu.model.multimodel;import modchu.lib.Modchu_EntityCapsHelper;
import modchu.lib.characteristic.Modchu_AS;
import modchu.lib.characteristic.Modchu_ModelRenderer;
import modchu.model.ModchuModel_IEntityCaps;
import modchu.model.multimodel.base.MultiModel_SR2;public class MultiModel_DressYukari extends MultiModel_SR2 {	public Modchu_ModelRenderer Ahoge;
	public Modchu_ModelRenderer overHear;
	public Modchu_ModelRenderer Glass;
	public Modchu_ModelRenderer specialModel[];
	public Modchu_ModelRenderer pink;	private int IdOffset = 0;	public MultiModel_DressYukari() {
		this(0.0F);
	}	public MultiModel_DressYukari(float f) {
		this(f, 0.0F);
	}	public MultiModel_DressYukari(float f, float f1) {
		this(f, f1, 64, 64);
	}	public MultiModel_DressYukari(float f, float f1, int i, int j) {
		super(f, f1, i < 0 ? 64 : i, j < 0 ? 32 : j);
		HeadMount.setRotationPoint(0.0F, 1.0F, 0.0F);
	}	@Override
	public void initModel(float f, float f1, boolean isAfterInit) {
		textureHeight = 64;
		textureWidth = 64;
		super.initModel(f, f1, false);
		f1 += 8F;		Glass = new Modchu_ModelRenderer(this, 24, 0);
		Glass.addPlate(-8.0F, -4.0F, 0F, 16, 8, 0, f);
		Glass.setRotationPoint(0.0F, -4.0F, -4.0F);
		Glass.setScale(0.5F, 0.5F, 1.0F);		overHear = new Modchu_ModelRenderer(this, 0, 16);
		overHear.addBox(-4f, -9f, -4f, 8, 9, 8, f + 0.3f);
		overHear.setRotationPoint(0f, 1f, 0f);		SideTailL = new Modchu_ModelRenderer(this, 46, 26);
		SideTailL.addBox(4.7F, -6F, 1F, 1, 1, 1, f + 0.2F);
		SideTailL.setRotationPoint(0F, 0F, 0F);
		SideTailL.isHidden = true;		SideTailR = new Modchu_ModelRenderer(this, 50, 26);
		SideTailR.addBox(-5.7F, -6F, 1F, 1, 1, 1, f + 0.2F);
		SideTailR.setRotationPoint(0F, 0F, 0F);
		SideTailR.isHidden = true;		Tail = new Modchu_ModelRenderer(this, 46, 19);
		Tail.addBox(-1F, -7F, 4.8F, 2, 2, 2, f + 0.1F);
		Tail.setRotationPoint(0F, 0F, 0F);		Ahoge = new Modchu_ModelRenderer(this, 0, 1);
		Ahoge.addBox(0F, 0F, 0F, 0, 3, 4, f);
		Ahoge.setRotationPoint(0F, -7F, -4F);		pink = new Modchu_ModelRenderer(this, 0, 1);
		pink.addPlate(1.6F, 0F, 0F, 2, 1, 0, f - 0.1f);
		pink.addPlate(-3.6F, 0F, 0F, 2, 1, 0, f - 0.1f);
		pink.setRotationPoint(0f, -1.9f, -4.3f);		//		loadModel=new ModchuModel_ModelRenderer[4];
		//		loadModel[0]=new ModchuModel_ModelRenderer(this);		Skirt = new Modchu_ModelRenderer(this);
		initSpecialModel(f);
		if (isAfterInit) afterInit(f, f1);
	}	@Override
	public void skirtFloatsInit(float f, float f1) {
	}	@Override
	public void defaultAddChildSetting() {
		super.defaultAddChildSetting();
		bipedHead.removeChild(ChignonB);
		bipedHead.removeChild(ChignonR);
		bipedHead.removeChild(ChignonL);
		bipedHead.addChild(Glass);
		bipedHead.addChild(overHear);
		bipedHead.addChild(Ahoge);
		bipedHead.addChild(pink);
		bipedHead.addChild(specialModel[1]);//		髪留め
		bipedHead.addChild(specialModel[3]);//		おさげ
		bipedBody.removeChild(Skirt);
		Skirt.addChild(specialModel[0]);//			スカート
		Skirt.addChild(specialModel[2]);//			りぼん
		bipedBody.addChild(Skirt);
	}	@Override
	public void skirtFloats(float f, float f1, float f2, float f3, float f4, float f5, ModchuModel_IEntityCaps entityCaps) {
	}	@Override
	public void defaultSkirtFloatsAddChild() {
	}
/*
	@Override
	public void render(ModchuModel_IEntityCaps entityCaps, float f, float f1, float ticksExisted, float pheadYaw, float pheadPitch, float f5, boolean pIsRender) {
		setRotationAngles(f, f1, ticksExisted, pheadYaw, pheadPitch, f5, entityCaps);
		Skirt.showModel = true;
		Skirt.isHidden = false;
		specialModel[0].showModel = true;
		specialModel[0].isHidden = false;
		mainFrame.render(f5, pIsRender);
		specialModel[0].render(f5, pIsRender);
		Modchu_Debug.mDebug("MultiModel_DressYukari render pIsRender="+pIsRender);
	}
*/
	@Override
	public void setLivingAnimationsLM(ModchuModel_IEntityCaps entityCaps, float f, float f1, float f2) {
		super.setLivingAnimationsLM(entityCaps, f, f1, f2);
		Object entityliving = entityCaps.getCapsValue(entityCaps.caps_Entity);
		if (entityliving != null) ;else return;
		int entityId = Modchu_AS.getInt(Modchu_AS.entityEntityID, entityliving);
		IdOffset = entityId;
		pink.setVisible(Modchu_EntityCapsHelper.getCapsValueBoolean(this, entityCaps, caps_isLookSuger));
	}	@Override
	public void setRotationAnglesLM(float f, float f1, float f2, float f3, float f4, float f5, ModchuModel_IEntityCaps entityCaps) {
		super.setRotationAnglesLM(f, f1, f2, f3, f4, f5, entityCaps);
		Object entity = entityCaps.getCapsValue(entityCaps.caps_Entity);
		if (entity != null) ;else return;		float t;
		Object ridingEntity = Modchu_AS.get(Modchu_AS.entityRidingEntity, entity);
		int ticksExisted = Modchu_AS.getInt(Modchu_AS.entityTicksExisted, entity);
		if (Modchu_EntityCapsHelper.getCapsValueBoolean(this, entityCaps, caps_getIsRiding)
				&& ridingEntity != null) t = (float)ticksExisted;
		else t = f2;		Ahoge.rotateAngleY = Modchu_AS.getFloat(Modchu_AS.mathHelperCos, t * 0.2F + Modchu_AS.getFloat(Modchu_AS.mathHelperCos, t * 0.05F + IdOffset) * 1.0F) * 0.2F;
		Ahoge.rotateAngleX = 2.9F;		Skirt.rotateAngleX = 0f;
		Skirt.rotationPointY -= 9F;
		Skirt.rotationPointZ = 0f;		if (Modchu_EntityCapsHelper.getCapsValueBoolean(this, entityCaps, caps_getIsRiding)) {
			Skirt.rotationPointY -= 0.2f;
			Skirt.rotationPointZ += 1.0f;
			Skirt.rotateAngleX = Modchu_EntityCapsHelper.getCapsValueFloat(this, entityCaps, caps_convertDegtoRad, -25F);
		}
		if(Modchu_EntityCapsHelper.getCapsValueBoolean(this, entityCaps, caps_getIsSneak)){
			Skirt.rotationPointZ += 1.5F;
		} else {
			Skirt.rotationPointZ = 0.0F;
		}
	}	@Override
	public void showModelSettingReflects(ModchuModel_IEntityCaps entityCaps) {
		super.showModelSettingReflects(entityCaps);
		int i = Modchu_EntityCapsHelper.getCapsValueInt(this, entityCaps, caps_showPartsMapBoolean, "Skirt", Modchu_EntityCapsHelper.getCapsValueInt(this, entityCaps, caps_armorType));
		boolean b = i != 0;
		setCapsValue(entityCaps, caps_visible, specialModel[0], b);
	}	@Override
	public float getHeight(ModchuModel_IEntityCaps entityCaps) {
		return 1.35F;
	}	@Override
	public float getWidth(ModchuModel_IEntityCaps entityCaps) {
		return 0.5F;
	}	private void initSpecialModel(float psize){
		float v[][]={
				{3.21975f,10.666699f,3.0917702f},
				{-3.26832f,10.666699f,-3.01937f},
				{3.0151799f,10.9999895f,1.96867f},
				{3.0151799f,10.9999895f,-1.96934f},
				{-3.26832f,10.666699f,3.0917702f},
				{-2.97933f,10.9999895f,1.96867f},
				{-2.97933f,10.9999895f,-1.96934f},
				{3.0151799f,10.9999895f,-0.0f},
				{4.01581f,10.666699f,-0.0f},
				{-2.97933f,10.9999895f,-0.0f},
				{-4.0643797f,10.666699f,-0.0f},
				{0.0f,10.9999895f,-1.96934f},
				{0.0f,10.9999895f,-0.0f},
				{0.0f,10.9999895f,1.96867f},
				{0.0f,10.666699f,3.86061f},
				{3.8481102f,10.20852f,-3.7443f},
				{0.0f,10.666699f,-3.78821f},
				{4.57441f,10.4445f,-0.0f},
				{5.42316f,9.82884f,-0.0f},
				{4.11729f,9.55949f,3.9501f},
				{0.0f,9.3286f,5.6203003f},
				{-3.7058802f,9.9058f,3.76742f},
				{-4.0587196f,9.059259f,4.22985f},
				{-6.13371f,8.9438095f,-0.0f},
				{-4.6904902f,8.75142f,-4.74509f},
				{0.0f,8.366631f,-6.11681f},
				{4.91217f,8.0588f,-5.27317f},
				{7.0697203f,7.75097f,-0.0f},
				{5.36638f,7.4046497f,5.0563f},
				{0.0f,7.0198603f,7.38512f},
				{-5.30783f,6.67355f,5.51334f},
				{-7.9300804f,6.36572f,-0.0f},
				{-6.14341f,6.09636f,-6.21218f},
				{3.30231f,10.65823f,-2.78821f},
				{3.6062899f,10.29059f,3.60201f},
				{0.0f,10.09819f,4.81811f},
				{-5.42377f,9.63644f,-0.0f},
				{-4.23339f,9.44405f,-4.24681f},
				{0.0f,9.21052f,-5.42947f},
				{4.44563f,8.9438095f,-4.64865f},
				{6.4802904f,8.63598f,-0.0f},
				{4.8346f,8.28967f,4.5978503f},
				{0.0f,7.9433603f,6.6658697f},
				{-4.7568197f,7.67401f,4.93122f},
				{-7.38282f,7.2507296f,-0.0f},
				{-5.64849f,7.0198603f,-5.75449f},
				{0.0f,6.7120304f,-7.32167f},
				{0.0f,5.93987f,8.070661f},
				{-5.65074f,5.93987f,5.89769f},
				{-8.17206f,5.93987f,-0.0f},
				{-6.28109f,5.93987f,-6.315f},
				{0.0f,5.93987f,-7.76403f},
				{5.72103f,5.93987f,-6.40511f},
				{7.9150496f,5.93987f,-0.0f},
				{5.9471397f,5.93987f,5.5304904f},
				{-6.02315f,5.5333f,6.10385f},
				{-0.01883f,5.5333f,8.41467f},
				{-8.6359005f,5.53329f,0.0047500003f},
				{6.18655f,5.5333f,5.66761f},
				{-6.50625f,5.53329f,-6.55258f},
				{8.19726f,5.53329f,0.0047500003f},
				{-0.01883f,5.53329f,-7.99834f},
				{5.9820995f,5.53329f,-6.5542197f},
				{-0.06864f,5.13207f,7.3718f},
				{-5.43298f,5.13207f,5.38383f},
				{5.43443f,5.13207f,4.97755f},
				{-7.74341f,5.13207f,-0.00497f},
				{7.20197f,5.13207f,-0.00497f},
				{-5.79752f,5.13206f,-5.80849f},
				{5.26464f,5.13206f,-5.77615f},
				{-0.06864f,5.13206f,-7.0664f},
				{2.93653f,22.5107f,4.22561f},
				{2.93653f,23.3136f,4.21943f},
				{3.50429f,23.07844f,4.22124f},
				{3.73947f,22.5107f,4.22561f},
				{3.50429f,21.94295f,4.22998f},
				{2.93653f,21.70778f,4.23179f},
				{2.3687599f,21.94295f,4.22999f},
				{2.13359f,22.5107f,4.22561f},
				{2.3687599f,23.07844f,4.22124f},
				{2.93653f,22.926239f,4.41892f},
				{3.229f,22.80509f,4.4198503f},
				{3.3501399f,22.512642f,4.4221f},
				{3.229f,22.22018f,4.4243603f},
				{2.93653f,22.09904f,4.42529f},
				{2.64406f,22.22018f,4.4243603f},
				{2.5229099f,22.512642f,4.4221f},
				{2.64406f,22.80509f,4.4198503f},
				{3.50429f,23.079432f,4.32177f},
				{3.73947f,22.51169f,4.32615f},
				{2.93653f,23.31459f,4.31997f},
				{3.50429f,21.943941f,4.33052f},
				{2.3687599f,23.079432f,4.32177f},
				{2.93653f,21.70879f,4.3323298f},
				{2.13359f,22.51169f,4.32615f},
				{2.3687599f,21.94395f,4.33052f},
				{2.93653f,22.925602f,4.35382f},
				{3.229f,22.804451f,4.35476f},
				{3.3501399f,22.512f,4.35701f},
				{3.229f,22.219551f,4.35926f},
				{2.93653f,22.0984f,4.36019f},
				{2.64406f,22.219551f,4.35926f},
				{2.5229099f,22.512f,4.35701f},
				{2.64406f,22.804451f,4.35476f},
				{2.93653f,22.512f,4.42976f},
				{1.95651f,22.0936f,4.17185f},
				{1.95651f,22.55748f,4.16566f},
				{2.28453f,22.42162f,4.16747f},
				{2.4204f,22.0936f,4.17185f},
				{2.28453f,21.76559f,4.17622f},
				{1.95651f,21.629742f,4.17803f},
				{1.62849f,21.76559f,4.17622f},
				{1.49262f,22.0936f,4.17185f},
				{1.62849f,22.42162f,4.16747f},
				{1.95651f,22.33368f,4.36516f},
				{2.12548f,22.2637f,4.36609f},
				{2.19547f,22.094728f,4.36834f},
				{2.12548f,21.92577f,4.3705897f},
				{1.95651f,21.855782f,4.37152f},
				{1.78754f,21.92577f,4.3705897f},
				{1.71755f,22.094728f,4.36834f},
				{1.78754f,22.2637f,4.36609f},
				{2.28453f,22.4222f,4.26801f},
				{2.4204f,22.09419f,4.27238f},
				{1.95651f,22.55806f,4.2662f},
				{2.28453f,21.766182f,4.27676f},
				{1.62849f,22.4222f,4.26801f},
				{1.95651f,21.630322f,4.27857f},
				{1.49262f,22.09419f,4.27238f},
				{1.62849f,21.766182f,4.27676f},
				{1.95651f,22.33331f,4.30006f},
				{2.12548f,22.26334f,4.30099f},
				{2.19547f,22.094349f,4.30324f},
				{2.12548f,21.92539f,4.3055f},
				{1.95651f,21.85541f,4.30643f},
				{1.78754f,21.92539f,4.3055f},
				{1.71755f,22.094349f,4.30324f},
				{1.78754f,22.26334f,4.30099f},
				{1.95651f,22.09436f,4.376f},
				{-1.00672f,11.86046f,-2.8105803f},
				{-1.00965f,11.03161f,-2.30671f},
				{0.91726f,11.857019f,-2.80507f},
				{0.91434f,11.02816f,-2.3012f},
				{0.92024994f,10.83235f,-4.49063f},
				{0.91732f,10.00348f,-3.9867601f},
				{-1.00374f,10.83579f,-4.49613f},
				{-1.00666f,10.006929f,-3.99226f},
				{1.00745f,11.62012f,-2.9104998f},
				{1.0054101f,11.0434f,-2.55991f},
				{4.39027f,12.18727f,-2.60769f},
				{4.38619f,11.0337105f,-1.90643f},
				{5.62251f,9.16119f,-7.57842f},
				{5.6184397f,8.13214f,-6.87716f},
				{0.97839f,10.839339f,-4.1950502f},
				{0.97635f,10.43272f,-3.84446f},
				{4.68196f,11.634819f,-2.30063f},
				{6.0806603f,8.43848f,-7.55046f},
				{0.70054f,11.370171f,-2.7591f},
				{0.67148f,10.58939f,-4.04364f},
				{4.14776f,11.122331f,-4.36094f},
				{4.5517797f,10.4321f,-4.27986f},
				{1.07645f,11.140309f,-3.5610602f},
				{4.14369f,9.96876f,-3.65968f},
				{0.82578003f,10.951651f,-3.44681f},
				{1.07485f,10.68639f,-3.28512f},
				{-1.01943f,11.62375f,-2.9163f},
				{-1.02147f,11.04704f,-2.56571f},
				{-4.4018703f,12.203031f,-2.6328301f},
				{-4.40595f,11.04946f,-1.93157f},
				{-5.61651f,9.18133f,-7.61055f},
				{-5.6184397f,8.13214f,-6.87716f},
				{-0.98582995f,10.842859f,-4.2006598f},
				{-0.97635f,10.43272f,-3.84446f},
				{-4.69729f,11.65162f,-2.32744f},
				{-6.0773897f,8.46026f,-7.58523f},
				{-0.71429f,11.3727f,-2.76314f},
				{-0.68069005f,10.59181f,-4.04751f},
				{-4.15316f,11.1372f,-4.38467f},
				{-4.56011f,10.44842f,-4.30591f},
				{-1.0864301f,11.14419f,-3.56724f},
				{-4.15724f,9.98363f,-3.68341f},
				{-0.8371f,10.95463f,-3.45157f},
				{-1.08803f,10.69026f,-3.2912998f},
				{2.27929f,4.16126f,-9.55588f},
				{5.42031f,3.77377f,-7.96328f},
				{0.96414f,10.43177f,-3.9246402f},
				{0.93087006f,11.089621f,-2.63976f},
				{3.47333f,4.23389f,-8.1444f},
				{0.97045f,10.96566f,-3.22109f},
				{1.5114801f,9.58343f,-5.0508204f},
				{2.24142f,9.98066f,-4.32209f},
				{3.15483f,10.283329f,-3.81691f},
				{2.01736f,7.51368f,-6.856f},
				{3.2564301f,7.24258f,-6.54226f},
				{4.5724f,7.3139696f,-6.01166f},
				{-2.27929f,4.16126f,-9.55588f},
				{-5.42031f,3.77377f,-7.96328f},
				{-0.96414f,10.43177f,-3.9246402f},
				{-0.94631004f,11.092989f,-2.64513f},
				{-3.47333f,4.23389f,-8.1444f},
				{-0.97045f,10.96566f,-3.22109f},
				{-1.5114801f,9.58343f,-5.0508204f},
				{-2.24142f,9.98066f,-4.32209f},
				{-3.15483f,10.283329f,-3.81691f},
				{-2.01736f,7.51368f,-6.856f},
				{-3.2564301f,7.24258f,-6.54226f},
				{-4.5724f,7.3139696f,-6.01166f},
				{4.14875f,16.26453f,2.92269f},
				{4.14875f,16.26453f,3.3295f},
				{4.4364f,16.26453f,3.21035f},
				{4.55555f,16.26453f,2.92269f},
				{4.4364f,16.26453f,2.6350298f},
				{4.14875f,16.26453f,2.5158799f},
				{3.86109f,16.26453f,2.6350298f},
				{3.74194f,16.26453f,2.92269f},
				{3.86109f,16.26453f,3.21035f},
				{4.14875f,15.52444f,3.3295f},
				{4.4364f,15.52444f,3.21035f},
				{4.55555f,15.52444f,2.92269f},
				{4.4364f,15.52444f,2.6350298f},
				{4.14875f,15.52444f,2.5158799f},
				{3.86109f,15.52444f,2.6350298f},
				{3.74194f,15.52444f,2.92269f},
				{3.86109f,15.52444f,3.21035f},
				{4.14875f,15.52444f,2.92269f},
				{4.14875f,15.981911f,3.3295f},
				{4.4364f,15.981911f,3.21035f},
				{3.86109f,15.981911f,3.21035f},
				{4.55555f,15.981911f,2.92269f},
				{3.74194f,15.981911f,2.92269f},
				{4.4364f,15.981911f,2.6350298f},
				{3.86109f,15.981911f,2.6350298f},
				{4.14875f,15.981911f,2.5158799f},
				{4.14875f,15.78768f,3.3295f},
				{4.4364f,15.78768f,3.21035f},
				{3.86109f,15.78768f,3.21035f},
				{4.55555f,15.78768f,2.92269f},
				{3.74194f,15.78768f,2.92269f},
				{4.4364f,15.78768f,2.6350298f},
				{3.86109f,15.78768f,2.6350298f},
				{4.14875f,15.78768f,2.5158799f},
				{4.13288f,16.25988f,2.85922f},
				{4.13288f,14.23287f,3.45948f},
				{4.71836f,14.23287f,2.85922f},
				{4.13288f,14.23287f,2.25896f},
				{3.5474f,14.23287f,2.85922f},
				{4.13288f,12.20585f,2.85922f},
				{-4.14875f,16.26453f,2.92269f},
				{-4.14875f,16.26453f,3.3295f},
				{-4.4364f,16.26453f,3.21035f},
				{-4.55555f,16.26453f,2.92269f},
				{-4.4364f,16.26453f,2.6350298f},
				{-4.14875f,16.26453f,2.5158799f},
				{-3.86109f,16.26453f,2.6350298f},
				{-3.74194f,16.26453f,2.92269f},
				{-3.86109f,16.26453f,3.21035f},
				{-4.14875f,15.52444f,3.3295f},
				{-4.4364f,15.52444f,3.21035f},
				{-4.55555f,15.52444f,2.92269f},
				{-4.4364f,15.52444f,2.6350298f},
				{-4.14875f,15.52444f,2.5158799f},
				{-3.86109f,15.52444f,2.6350298f},
				{-3.74194f,15.52444f,2.92269f},
				{-3.86109f,15.52444f,3.21035f},
				{-4.14875f,15.52444f,2.92269f},
				{-4.14875f,15.981911f,3.3295f},
				{-4.4364f,15.981911f,3.21035f},
				{-3.86109f,15.981911f,3.21035f},
				{-4.55555f,15.981911f,2.92269f},
				{-3.74194f,15.981911f,2.92269f},
				{-4.4364f,15.981911f,2.6350298f},
				{-3.86109f,15.981911f,2.6350298f},
				{-4.14875f,15.981911f,2.5158799f},
				{-4.14875f,15.78768f,3.3295f},
				{-4.4364f,15.78768f,3.21035f},
				{-3.86109f,15.78768f,3.21035f},
				{-4.55555f,15.78768f,2.92269f},
				{-3.74194f,15.78768f,2.92269f},
				{-4.4364f,15.78768f,2.6350298f},
				{-3.86109f,15.78768f,2.6350298f},
				{-4.14875f,15.78768f,2.5158799f},
				{-4.13288f,16.25988f,2.85922f},
				{-4.13288f,14.23287f,3.45948f},
				{-4.71836f,14.23287f,2.85922f},
				{-4.13288f,14.23287f,2.25896f},
				{-3.5474f,14.23287f,2.85922f},
				{-4.13288f,12.20585f,2.85922f}
				};
				float vt[][]={
				{0.01014f,0.0091199875f},
				{0.01089f,0.009130001f},
				{0.01055f,0.008660018f},
				{0.01016f,0.008889973f},
				{0.01049f,0.00959003f},
				{0.01013f,0.009350002f},
				{0.00785f,0.009109974f},
				{0.00708f,0.009109974f},
				{0.00743f,0.009580016f},
				{0.00783f,0.009339988f},
				{0.00786f,0.008880019f},
				{0.00749f,0.008639991f},
				{0.009f,0.008889973f},
				{0.00899f,0.0091199875f},
				{0.00897f,0.009350002f},
				{0.00895f,0.0097f},
				{0.07075f,0.006039977f},
				{0.00903f,0.008530021f},
				{0.01116f,0.009130001f},
				{0.01067f,0.009670019f},
				{0.00894f,0.009850025f},
				{0.00722f,0.009679973f},
				{0.00644f,0.00910002f},
				{0.00705f,0.008449972f},
				{0.00904f,0.008279979f},
				{0.01085f,0.008549988f},
				{0.01114f,0.008409977f},
				{0.01156f,0.009130001f},
				{0.01206f,0.009140015f},
				{0.0109f,0.009729981f},
				{0.01124f,0.009829998f},
				{0.00893f,0.009970009f},
				{0.00892f,0.010129988f},
				{0.00704f,0.009750009f},
				{0.00671f,0.009850025f},
				{0.00611f,0.00910002f},
				{0.00552f,0.00910002f},
				{0.00684f,0.008369982f},
				{0.00639f,0.008210003f},
				{0.00905f,0.008180022f},
				{0.00906f,0.007990003f},
				{0.01137f,0.008319974f},
				{0.01176f,0.0081499815f},
				{0.01233f,0.009140015f},
				{0.01273f,0.009140015f},
				{0.01148f,0.009899974f},
				{0.01175f,0.009970009f},
				{0.00892f,0.010240018f},
				{0.00892f,0.010349989f},
				{0.00644f,0.009940028f},
				{0.00628f,0.00999999f},
				{0.00526f,0.009090006f},
				{0.00515f,0.009090006f},
				{0.00617f,0.0081400275f},
				{0.0061f,0.008130014f},
				{0.00907f,0.007920027f},
				{0.08563f,0.007499993f},
				{0.04017f,0.0063800216f},
				{0.0236f,0.010039985f},
				{0.02359f,0.0041999817f},
				{0.0244f,0.005469978f},
				{0.02406f,0.007049978f},
				{0.05524f,0.009609997f},
				{0.02296f,0.0048099756f},
				{0.10256f,0.0081400275f}
				};
				float vn[][]={
				{0.221625f,0.975127f,5.19E-4f},
				{0.427747f,0.903775f,0.014222f},
				{0.281625f,0.926145f,-0.250832f},
				{0.193548f,0.969024f,-0.153325f},
				{0.253334f,0.925718f,0.28077f},
				{0.21189f,0.972655f,0.09476f},
				{-0.20191f,0.9794f,-3.05E-4f},
				{-0.547746f,0.836604f,0.004761f},
				{-0.34199f,0.87933f,0.331309f},
				{-0.189276f,0.977508f,0.092837f},
				{-0.195349f,0.974944f,-0.106174f},
				{-0.333048f,0.868618f,-0.366771f},
				{0.011963f,0.994964f,-0.099277f},
				{0.0f,1.0f,0.0f},
				{3.1E-5f,0.994201f,0.107486f},
				{-0.01474f,0.908719f,0.417096f},
				{0.534135f,0.844752f,0.032136f},
				{0.710379f,0.703452f,0.022217f},
				{0.419935f,0.7875f,-0.451064f},
				{0.397992f,0.790887f,0.464797f},
				{0.518632f,0.66509f,0.537217f},
				{-0.017731f,0.735466f,0.677297f},
				{-0.011689f,0.619983f,0.784509f},
				{-0.484939f,0.713858f,0.505173f},
				{-0.538163f,0.613117f,0.578265f},
				{-0.709067f,0.704398f,0.031648f},
				{-0.778588f,0.62569f,0.047578f},
				{-0.4438f,0.741111f,-0.503739f},
				{-0.503372f,0.658711f,-0.55916f},
				{-0.004517f,0.679281f,-0.733848f},
				{-1.53E-4f,0.602161f,-0.798364f},
				{0.493515f,0.667318f,-0.557726f},
				{0.546617f,0.585681f,-0.598407f},
				{0.79284f,0.609333f,0.009613f},
				{0.856563f,0.515946f,0.005371f},
				{0.549608f,0.61333f,0.567217f},
				{0.607562f,0.529221f,0.592242f},
				{-0.009857f,0.604236f,0.796716f},
				{0.005982f,0.559801f,0.828578f},
				{-0.55858f,0.594409f,0.578478f},
				{-0.573138f,0.570482f,0.588214f},
				{-0.813776f,0.579333f,0.046175f},
				{-0.825648f,0.562151f,0.047548f},
				{-0.540086f,0.593768f,-0.596393f},
				{-0.529557f,0.624378f,-0.574175f},
				{3.1E-5f,0.536882f,-0.843654f},
				{0.003876f,0.842097f,-0.539262f},
				{0.004852f,0.879208f,-0.476363f},
				{0.343211f,0.836604f,-0.426923f},
				{0.546922f,0.837153f,0.003265f},
				{0.398175f,0.832453f,0.385266f},
				{0.018769f,0.861263f,0.507797f},
				{-0.286111f,0.902402f,0.322184f},
				{-0.401227f,0.915799f,0.017243f},
				{-0.299997f,0.897488f,-0.323191f},
				{-0.701956f,-0.158086f,0.694418f},
				{0.022431f,-0.226691f,0.973693f},
				{-0.986816f,-0.158147f,0.033845f},
				{0.728568f,-0.237098f,0.642598f},
				{-0.651997f,-0.186529f,-0.734886f},
				{0.970397f,-0.24131f,0.009186f},
				{0.006623f,-0.27955f,-0.960082f},
				{0.679647f,-0.242439f,-0.692282f},
				{0.010407f,-0.720847f,-0.692984f},
				{0.468551f,-0.789697f,-0.395947f},
				{-0.522599f,-0.713767f,-0.466262f},
				{0.602802f,-0.796808f,-0.0412f},
				{-0.715934f,-0.698111f,-0.002838f},
				{0.440077f,-0.784906f,0.43611f},
				{-0.481613f,-0.74633f,0.459304f},
				{0.010681f,-0.671255f,0.741142f},
				{0.0f,-0.007691f,-0.999969f},
				{0.0f,0.770837f,-0.637013f},
				{0.548845f,0.543565f,-0.635029f},
				{0.77636f,-0.005249f,-0.630238f},
				{0.549089f,-0.554338f,-0.625416f},
				{0.0f,-0.781884f,-0.623402f},
				{-0.54912f,-0.554369f,-0.625385f},
				{-0.77636f,-0.005249f,-0.630238f},
				{-0.548845f,0.543565f,-0.635029f},
				{0.589496f,0.594073f,0.547288f},
				{0.833491f,0.004608f,0.552477f},
				{-0.327158f,-0.320627f,0.888882f},
				{-0.463546f,0.0065f,0.886013f},
				{0.0f,0.838313f,0.545152f},
				{0.0f,-0.455763f,0.890072f},
				{0.589221f,-0.584613f,0.557695f},
				{-0.328379f,0.33488f,0.883175f},
				{-0.589496f,0.594073f,0.547288f},
				{0.327158f,-0.320627f,0.888882f},
				{0.0f,-0.828578f,0.559862f},
				{0.0f,0.471267f,0.881954f},
				{-0.833491f,0.004608f,0.552507f},
				{0.463546f,0.0065f,0.886013f},
				{-0.589221f,-0.584582f,0.557695f},
				{0.328379f,0.33491f,0.883145f},
				{-0.516861f,-0.511093f,0.686728f},
				{0.0f,-0.72512f,0.688589f},
				{0.0f,0.007416f,0.999969f},
				{-0.73104f,0.005707f,0.682272f},
				{-0.517014f,0.522691f,0.677816f},
				{0.0f,0.736869f,0.675985f},
				{0.517014f,0.522691f,0.677816f},
				{0.73104f,0.005707f,0.682272f},
				{0.516831f,-0.511093f,0.686728f},
				{0.0f,-0.013306f,-0.999908f},
				{0.0f,0.770226f,-0.637745f},
				{0.549425f,0.542405f,-0.635548f},
				{0.77636f,-0.006989f,-0.630207f},
				{0.54854f,-0.555498f,-0.624897f},
				{0.0f,-0.782434f,-0.6227f},
				{-0.54854f,-0.555498f,-0.624897f},
				{-0.77636f,-0.006989f,-0.630207f},
				{-0.549425f,0.542405f,-0.635548f},
				{0.613147f,0.618641f,0.491226f},
				{0.867794f,0.005524f,0.496841f},
				{-0.265877f,-0.25248f,0.930326f},
				{-0.372509f,0.013337f,0.927915f},
				{0.0f,0.872311f,0.488937f},
				{0.0f,-0.364086f,0.931333f},
				{0.614124f,-0.608539f,0.502487f},
				{-0.260964f,0.2743f,0.925535f},
				{-0.613147f,0.618641f,0.491226f},
				{0.265877f,-0.25248f,0.930326f},
				{0.0f,-0.863186f,0.504837f},
				{0.0f,0.380963f,0.924558f},
				{-0.867794f,0.005524f,0.496841f},
				{0.372509f,0.013337f,0.927915f},
				{-0.614124f,-0.608539f,0.502487f},
				{0.260964f,0.2743f,0.925535f},
				{-0.49382f,-0.485855f,0.721122f},
				{0.0f,-0.690786f,0.723014f},
				{0.0f,0.012085f,0.999908f},
				{-0.697409f,0.008057f,0.716605f},
				{-0.492447f,0.500473f,0.712027f},
				{0.0f,0.704001f,0.710166f},
				{0.492447f,0.500473f,0.712027f},
				{0.697409f,0.008057f,0.716605f},
				{0.49382f,-0.485855f,0.721122f},
				{-0.576464f,0.794275f,0.191778f},
				{-0.579943f,-0.192389f,0.791589f},
				{0.574725f,-0.194464f,0.794885f},
				{0.578204f,0.792199f,0.195074f},
				{0.576464f,-0.794275f,-0.191778f},
				{0.579943f,0.192389f,-0.791589f},
				{-0.578204f,-0.792199f,-0.195074f},
				{-0.574725f,0.194464f,-0.794885f},
				{0.390942f,0.799921f,-0.455214f},
				{0.978088f,0.124088f,0.16715f},
				{0.92996f,0.217017f,0.296701f},
				{0.750755f,0.658834f,-0.047609f},
				{0.509323f,0.703421f,-0.495682f},
				{0.996063f,-0.023133f,-0.085391f},
				{-0.400647f,0.783441f,-0.475021f},
				{-0.405316f,0.743553f,-0.531754f},
				{-0.366131f,0.825678f,-0.429121f},
				{0.388592f,-0.788018f,0.477462f},
				{0.769951f,-0.328745f,0.546861f},
				{0.530595f,-0.75396f,0.38728f},
				{-0.998413f,0.052187f,-0.020325f},
				{-0.984527f,-0.022126f,-0.17365f},
				{-0.976135f,0.192511f,0.100467f},
				{-0.448775f,-0.782922f,0.430799f},
				{-0.450117f,-0.762047f,0.465438f},
				{-0.472182f,-0.788781f,0.393475f},
				{-0.97824f,0.131718f,0.160222f},
				{-0.385479f,0.801324f,-0.457442f},
				{-0.7481f,0.661519f,-0.051912f},
				{-0.930265f,0.22483f,0.289834f},
				{-0.503952f,0.705252f,-0.498581f},
				{-0.995636f,-0.019562f,-0.091067f},
				{0.40614f,0.782006f,-0.472701f},
				{0.411023f,0.742088f,-0.529435f},
				{0.371563f,0.824366f,-0.427015f},
				{-0.396893f,-0.782861f,0.479141f},
				{-0.778558f,-0.315195f,0.54265f},
				{-0.535508f,-0.752037f,0.384228f},
				{0.998413f,0.054628f,-0.013245f},
				{0.985443f,-0.025666f,-0.168004f},
				{0.973907f,0.200507f,0.106174f},
				{0.445265f,-0.781304f,0.43733f},
				{0.453505f,-0.753166f,0.476455f},
				{0.467086f,-0.79046f,0.396161f},
				{0.246864f,0.719504f,-0.649068f},
				{0.105106f,0.808191f,-0.579424f},
				{0.137577f,0.860561f,-0.490371f},
				{0.189398f,0.767205f,-0.612751f},
				{0.147221f,0.87463f,-0.461837f},
				{0.193335f,0.764855f,-0.61449f},
				{0.416974f,0.595752f,-0.686422f},
				{0.334147f,0.578967f,-0.743706f},
				{0.39436f,0.504746f,-0.767907f},
				{0.526811f,0.503006f,-0.68511f},
				{0.234596f,0.574908f,-0.783837f},
				{0.241066f,0.492843f,-0.836024f},
				{-0.105106f,0.808191f,-0.579424f},
				{-0.246864f,0.719504f,-0.649068f},
				{-0.188818f,0.766442f,-0.61388f},
				{-0.13599f,0.858699f,-0.494034f},
				{-0.192328f,0.763665f,-0.61626f},
				{-0.145268f,0.872494f,-0.466506f},
				{-0.334147f,0.578967f,-0.743706f},
				{-0.416974f,0.595752f,-0.686422f},
				{-0.526811f,0.503006f,-0.68511f},
				{-0.39436f,0.504746f,-0.767907f},
				{-0.234596f,0.574908f,-0.783837f},
				{-0.241066f,0.492843f,-0.836024f},
				{0.0f,0.630238f,0.77636f},
				{0.548967f,0.630238f,0.548967f},
				{0.77636f,0.630238f,0.0f},
				{0.548967f,0.630238f,-0.548967f},
				{0.0f,0.630238f,-0.77636f},
				{-0.548967f,0.630238f,-0.548967f},
				{-0.77636f,0.630238f,0.0f},
				{-0.548967f,0.630238f,0.548967f},
				{0.0f,-1.0f,0.0f},
				{0.548967f,-0.630238f,0.548967f},
				{0.0f,-0.630238f,0.77636f},
				{0.77636f,-0.630238f,0.0f},
				{0.548967f,-0.630238f,-0.548967f},
				{0.0f,-0.630238f,-0.77636f},
				{-0.548967f,-0.630238f,-0.548967f},
				{-0.77636f,-0.630238f,0.0f},
				{-0.548967f,-0.630238f,0.548967f},
				{0.0f,0.0f,1.0f},
				{0.707083f,0.0f,0.707083f},
				{-0.707083f,0.0f,0.707083f},
				{1.0f,0.0f,0.0f},
				{-1.0f,0.0f,0.0f},
				{0.707083f,0.0f,-0.707083f},
				{-0.707083f,0.0f,-0.707083f},
				{0.0f,0.0f,-1.0f},
				{0.0f,0.0f,0.999969f},
				{-0.999969f,0.0f,0.0f}
				};
				int faceis[][][]={
				{{1},{7,8,33,3},{0,1,2,3},{0,1,2,3}},
				{{1},{0,8,7,2},{4,1,0,5},{4,1,0,5}},
				{{1},{9,10,4,5},{6,7,8,9},{6,7,8,9}},
				{{1},{9,6,1,10},{6,10,11,7},{6,10,11,7}},
				{{1},{11,12,7,3},{12,13,0,3},{12,13,0,3}},
				{{1},{11,6,9,12},{12,10,6,13},{12,10,6,13}},
				{{1},{12,13,2,7},{13,14,5,0},{13,14,5,0}},
				{{1},{12,9,5,13},{13,6,9,14},{13,6,9,14}},
				{{1},{0,2,13,14},{4,5,14,15},{4,5,14,15}},
				{{1},{13,5,4,14},{14,9,8,15},{14,9,8,15}},
				{{1},{33,17,18,15},{16,16,16,16},{2,16,17,18}},
				{{1},{17,34,19,18},{16,16,16,16},{16,19,20,17}},
				{{1},{34,35,20,19},{16,16,16,16},{19,21,22,20}},
				{{1},{35,21,22,20},{16,16,16,16},{21,23,24,22}},
				{{1},{21,36,23,22},{16,16,16,16},{23,25,26,24}},
				{{1},{36,37,24,23},{16,16,16,16},{25,27,28,26}},
				{{1},{37,38,25,24},{16,16,16,16},{27,29,30,28}},
				{{1},{38,39,26,25},{16,16,16,16},{29,31,32,30}},
				{{1},{39,40,27,26},{16,16,16,16},{31,33,34,32}},
				{{1},{40,41,28,27},{16,16,16,16},{33,35,36,34}},
				{{1},{41,42,29,28},{16,16,16,16},{35,37,38,36}},
				{{1},{42,43,30,29},{16,16,16,16},{37,39,40,38}},
				{{1},{43,44,31,30},{16,16,16,16},{39,41,42,40}},
				{{1},{44,45,32,31},{16,16,16,16},{41,43,44,42}},
				{{1},{45,46,51,32},{16,16,16,16},{43,45,46,44}},
				{{1},{16,33,15},{16,16,16},{47,2,18}},
				{{1},{33,11,3},{2,12,3},{2,12,3}},
				{{1},{33,16,11},{16,16,16},{2,47,12}},
				{{1},{16,6,11},{16,16,16},{47,10,12}},
				{{1},{16,1,6},{17,11,10},{47,11,10}},
				{{1},{33,8,17},{2,1,18},{2,1,16}},
				{{1},{0,34,17,8},{4,19,18,1},{4,19,16,1}},
				{{1},{0,14,35,34},{4,15,20,19},{4,15,21,19}},
				{{1},{14,4,21,35},{15,8,21,20},{15,8,23,21}},
				{{1},{10,36,21,4},{7,22,21,8},{7,25,23,8}},
				{{1},{10,1,37,36},{7,11,23,22},{7,11,27,25}},
				{{1},{1,16,38,37},{11,17,24,23},{11,47,29,27}},
				{{1},{15,39,38,16},{25,26,24,17},{18,31,29,47}},
				{{1},{18,40,39,15},{27,28,26,25},{17,33,31,18}},
				{{1},{19,41,40,18},{29,30,28,27},{20,35,33,17}},
				{{1},{20,42,41,19},{31,32,30,29},{22,37,35,20}},
				{{1},{22,43,42,20},{33,34,32,31},{24,39,37,22}},
				{{1},{23,44,43,22},{35,36,34,33},{26,41,39,24}},
				{{1},{24,45,44,23},{37,38,36,35},{28,43,41,26}},
				{{1},{25,46,45,24},{39,40,38,37},{30,45,43,28}},
				{{1},{26,52,46,25},{41,42,40,39},{32,48,45,30}},
				{{1},{52,51,46},{16,16,16},{48,46,45}},
				{{1},{26,27,53,52},{41,43,44,42},{32,34,49,48}},
				{{1},{27,28,54,53},{43,45,46,44},{34,36,50,49}},
				{{1},{28,29,47,54},{45,47,48,46},{36,38,51,50}},
				{{1},{29,30,48,47},{47,49,50,48},{38,40,52,51}},
				{{1},{30,31,49,48},{49,51,52,50},{40,42,53,52}},
				{{1},{31,32,50,49},{51,53,54,52},{42,44,54,53}},
				{{1},{51,50,32},{55,54,53},{46,54,44}},
				{{1},{55,56,47,48},{56,56,56,56},{55,56,51,52}},
				{{1},{55,48,49,57},{56,56,56,56},{55,52,53,57}},
				{{1},{56,58,54,47},{56,56,56,56},{56,58,50,51}},
				{{1},{57,49,50,59},{56,56,56,56},{57,53,54,59}},
				{{1},{58,60,53,54},{56,56,56,56},{58,60,49,50}},
				{{1},{59,50,51,61},{56,56,56,56},{59,54,46,61}},
				{{1},{60,62,52,53},{56,56,56,56},{60,62,48,49}},
				{{1},{61,51,52,62},{56,56,56,56},{61,46,48,62}},
				{{1},{63,64,48,47},{56,56,56,56},{63,64,52,51}},
				{{1},{63,56,55,64},{56,56,56,56},{63,56,55,64}},
				{{1},{63,65,58,56},{56,56,56,56},{63,65,58,56}},
				{{1},{63,47,54,65},{56,56,56,56},{63,51,50,65}},
				{{1},{64,66,49,48},{56,56,56,56},{64,66,53,52}},
				{{1},{64,55,57,66},{56,56,56,56},{64,55,57,66}},
				{{1},{65,67,60,58},{56,56,56,56},{65,67,60,58}},
				{{1},{65,54,53,67},{56,56,56,56},{65,50,49,67}},
				{{1},{66,68,50,49},{56,56,56,56},{66,68,54,53}},
				{{1},{66,57,59,68},{56,56,56,56},{66,57,59,68}},
				{{1},{67,69,62,60},{56,56,56,56},{67,69,62,60}},
				{{1},{67,53,52,69},{56,56,56,56},{67,49,48,69}},
				{{1},{68,70,51,50},{56,56,56,56},{68,70,46,54}},
				{{1},{68,59,61,70},{56,56,56,56},{68,59,61,70}},
				{{1},{69,70,61,62},{56,56,56,56},{69,70,61,62}},
				{{1},{69,52,51,70},{56,56,56,56},{69,48,46,70}},
				{{2},{71,72,73},{57,57,57},{71,72,73}},
				{{2},{71,73,74},{57,57,57},{71,73,74}},
				{{2},{71,74,75},{57,57,57},{71,74,75}},
				{{2},{71,75,76},{57,57,57},{71,75,76}},
				{{2},{71,76,77},{57,57,57},{71,76,77}},
				{{2},{71,77,78},{57,57,57},{71,77,78}},
				{{2},{71,78,79},{57,57,57},{71,78,79}},
				{{2},{71,79,72},{57,57,57},{71,79,72}},
				{{2},{88,89,74,73},{57,57,57,57},{80,81,74,73}},
				{{2},{88,81,82,89},{57,57,57,57},{80,82,83,81}},
				{{2},{88,90,80,81},{57,57,57,57},{80,84,85,82}},
				{{2},{88,73,72,90},{57,57,57,57},{80,73,72,84}},
				{{2},{89,91,75,74},{57,57,57,57},{81,86,75,74}},
				{{2},{89,82,83,91},{57,57,57,57},{81,83,87,86}},
				{{2},{90,92,87,80},{57,57,57,57},{84,88,89,85}},
				{{2},{90,72,79,92},{57,57,57,57},{84,72,79,88}},
				{{2},{91,93,76,75},{57,57,57,57},{86,90,76,75}},
				{{2},{91,83,84,93},{57,57,57,57},{86,87,91,90}},
				{{2},{92,94,86,87},{57,57,57,57},{88,92,93,89}},
				{{2},{92,79,78,94},{57,57,57,57},{88,79,78,92}},
				{{2},{93,95,77,76},{57,57,57,57},{90,94,77,76}},
				{{2},{93,84,85,95},{57,57,57,57},{90,91,95,94}},
				{{2},{94,95,85,86},{57,57,57,57},{92,94,95,93}},
				{{2},{94,78,77,95},{57,57,57,57},{92,78,77,94}},
				{{2},{97,81,80,96},{57,57,57,57},{96,82,85,97}},
				{{2},{104,97,96},{58,58,58},{98,96,97}},
				{{2},{98,82,81,97},{57,57,57,57},{99,83,82,96}},
				{{2},{104,98,97},{58,58,58},{98,99,96}},
				{{2},{99,83,82,98},{57,57,57,57},{100,87,83,99}},
				{{2},{104,99,98},{58,58,58},{98,100,99}},
				{{2},{100,84,83,99},{57,57,57,57},{101,91,87,100}},
				{{2},{104,100,99},{58,58,58},{98,101,100}},
				{{2},{101,85,84,100},{57,57,57,57},{102,95,91,101}},
				{{2},{104,101,100},{58,58,58},{98,102,101}},
				{{2},{102,86,85,101},{57,57,57,57},{103,93,95,102}},
				{{2},{104,102,101},{58,58,58},{98,103,102}},
				{{2},{103,87,86,102},{57,57,57,57},{104,89,93,103}},
				{{2},{104,103,102},{58,58,58},{98,104,103}},
				{{2},{96,80,87,103},{57,57,57,57},{97,85,89,104}},
				{{2},{104,96,103},{58,58,58},{98,97,104}},
				{{2},{105,106,107},{57,57,57},{105,106,107}},
				{{2},{105,107,108},{57,57,57},{105,107,108}},
				{{2},{105,108,109},{57,57,57},{105,108,109}},
				{{2},{105,109,110},{57,57,57},{105,109,110}},
				{{2},{105,110,111},{57,57,57},{105,110,111}},
				{{2},{105,111,112},{57,57,57},{105,111,112}},
				{{2},{105,112,113},{57,57,57},{105,112,113}},
				{{2},{105,113,106},{57,57,57},{105,113,106}},
				{{2},{122,123,108,107},{57,57,57,57},{114,115,108,107}},
				{{2},{122,115,116,123},{57,57,57,57},{114,116,117,115}},
				{{2},{122,124,114,115},{57,57,57,57},{114,118,119,116}},
				{{2},{122,107,106,124},{57,57,57,57},{114,107,106,118}},
				{{2},{123,125,109,108},{57,57,57,57},{115,120,109,108}},
				{{2},{123,116,117,125},{57,57,57,57},{115,117,121,120}},
				{{2},{124,126,121,114},{57,57,57,57},{118,122,123,119}},
				{{2},{124,106,113,126},{57,57,57,57},{118,106,113,122}},
				{{2},{125,127,110,109},{57,57,57,57},{120,124,110,109}},
				{{2},{125,117,118,127},{57,57,57,57},{120,121,125,124}},
				{{2},{126,128,120,121},{57,57,57,57},{122,126,127,123}},
				{{2},{126,113,112,128},{57,57,57,57},{122,113,112,126}},
				{{2},{127,129,111,110},{57,57,57,57},{124,128,111,110}},
				{{2},{127,118,119,129},{57,57,57,57},{124,125,129,128}},
				{{2},{128,129,119,120},{57,57,57,57},{126,128,129,127}},
				{{2},{128,112,111,129},{57,57,57,57},{126,112,111,128}},
				{{2},{131,115,114,130},{57,57,57,57},{130,116,119,131}},
				{{2},{138,131,130},{58,58,58},{132,130,131}},
				{{2},{132,116,115,131},{57,57,57,57},{133,117,116,130}},
				{{2},{138,132,131},{58,58,58},{132,133,130}},
				{{2},{133,117,116,132},{57,57,57,57},{134,121,117,133}},
				{{2},{138,133,132},{58,58,58},{132,134,133}},
				{{2},{134,118,117,133},{57,57,57,57},{135,125,121,134}},
				{{2},{138,134,133},{58,58,58},{132,135,134}},
				{{2},{135,119,118,134},{57,57,57,57},{136,129,125,135}},
				{{2},{138,135,134},{58,58,58},{132,136,135}},
				{{2},{136,120,119,135},{57,57,57,57},{137,127,129,136}},
				{{2},{138,136,135},{58,58,58},{132,137,136}},
				{{2},{137,121,120,136},{57,57,57,57},{138,123,127,137}},
				{{2},{138,137,136},{58,58,58},{132,138,137}},
				{{2},{130,114,121,137},{57,57,57,57},{131,119,123,138}},
				{{2},{138,130,137},{58,58,58},{132,131,138}},
				{{3},{139,140,142,141},{59,59,59,59},{139,140,141,142}},
				{{3},{141,142,144,143},{59,59,59,59},{142,141,143,144}},
				{{3},{143,144,146,145},{59,59,59,59},{144,143,145,146}},
				{{3},{140,139,145,146},{59,59,59,59},{140,139,146,145}},
				{{3},{145,139,141,143},{59,59,59,59},{146,139,142,144}},
				{{3},{140,146,144,142},{59,59,59,59},{140,145,143,141}},
				{{3},{159,160,156,151},{60,60,60,60},{147,148,149,150}},
				{{3},{159,149,155,160},{60,60,60,60},{147,151,152,148}},
				{{3},{159,161,147,149},{60,60,60,60},{147,153,154,151}},
				{{3},{159,151,153,161},{60,60,60,60},{147,150,155,153}},
				{{3},{160,162,152,156},{60,60,60,60},{148,156,157,149}},
				{{3},{160,155,150,162},{60,60,60,60},{148,152,158,156}},
				{{3},{161,163,157,147},{60,60,60,60},{153,159,160,154}},
				{{3},{161,153,158,163},{60,60,60,60},{153,155,161,159}},
				{{3},{162,164,154,152},{60,60,60,60},{156,162,163,157}},
				{{3},{162,150,148,164},{60,60,60,60},{156,158,164,162}},
				{{3},{163,164,148,157},{60,60,60,60},{159,162,164,160}},
				{{3},{163,158,154,164},{60,60,60,60},{159,161,163,162}},
				{{3},{178,177,169,174},{60,60,60,60},{165,166,167,168}},
				{{3},{167,177,178,173},{60,60,60,60},{169,166,165,170}},
				{{3},{179,177,167,165},{60,60,60,60},{171,166,169,172}},
				{{3},{169,177,179,171},{60,60,60,60},{167,166,171,173}},
				{{3},{180,178,174,170},{60,60,60,60},{174,165,168,175}},
				{{3},{173,178,180,168},{60,60,60,60},{170,165,174,176}},
				{{3},{181,179,165,175},{60,60,60,60},{177,171,172,178}},
				{{3},{171,179,181,176},{60,60,60,60},{173,171,177,179}},
				{{3},{182,180,170,172},{60,60,60,60},{180,174,175,181}},
				{{3},{168,180,182,166},{60,60,60,60},{176,174,180,182}},
				{{3},{182,181,175,166},{60,60,60,60},{180,177,178,182}},
				{{3},{176,181,182,172},{60,60,60,60},{179,177,180,181}},
				{{3},{189,185,188,190},{61,61,61,61},{183,184,185,186}},
				{{3},{190,188,186,191},{61,61,61,61},{186,185,187,188}},
				{{3},{192,193,187,183},{61,61,61,61},{189,190,191,192}},
				{{3},{192,189,190,193},{61,61,61,61},{189,183,186,190}},
				{{3},{193,194,184,187},{61,61,61,61},{190,193,194,191}},
				{{3},{193,190,191,194},{61,61,61,61},{190,186,188,193}},
				{{3},{197,201,202,200},{61,61,61,61},{195,196,197,198}},
				{{3},{200,202,203,198},{61,61,61,61},{198,197,199,200}},
				{{3},{205,204,195,199},{61,61,61,61},{201,202,203,204}},
				{{3},{201,204,205,202},{61,61,61,61},{196,202,201,197}},
				{{3},{206,205,199,196},{61,61,61,61},{205,201,204,206}},
				{{3},{202,205,206,203},{61,61,61,61},{197,201,205,199}},
				{{4},{207,208,209},{62,62,62},{13,207,208}},
				{{4},{207,209,210},{62,62,62},{13,208,209}},
				{{4},{207,210,211},{62,62,62},{13,209,210}},
				{{4},{207,211,212},{62,62,62},{13,210,211}},
				{{4},{207,212,213},{62,62,62},{13,211,212}},
				{{4},{207,213,214},{62,62,62},{13,212,213}},
				{{4},{207,214,215},{62,62,62},{13,213,214}},
				{{4},{207,215,208},{62,62,62},{13,214,207}},
				{{4},{224,217,216},{62,62,62},{215,216,217}},
				{{4},{224,218,217},{62,62,62},{215,218,216}},
				{{4},{224,219,218},{62,62,62},{215,219,218}},
				{{4},{224,220,219},{62,62,62},{215,220,219}},
				{{4},{224,221,220},{62,62,62},{215,221,220}},
				{{4},{224,222,221},{62,62,62},{215,222,221}},
				{{4},{224,223,222},{62,62,62},{215,223,222}},
				{{4},{224,216,223},{62,62,62},{215,217,223}},
				{{4},{225,226,209,208},{62,62,62,62},{224,225,208,207}},
				{{4},{225,208,215,227},{62,62,62,62},{224,207,214,226}},
				{{4},{226,228,210,209},{62,62,62,62},{225,227,209,208}},
				{{4},{227,215,214,229},{62,62,62,62},{226,214,213,228}},
				{{4},{228,230,211,210},{62,62,62,62},{227,229,210,209}},
				{{4},{229,214,213,231},{62,62,62,62},{228,213,212,230}},
				{{4},{230,232,212,211},{62,62,62,62},{229,231,211,210}},
				{{4},{231,213,212,232},{62,62,62,62},{230,212,211,231}},
				{{4},{233,234,226,225},{63,63,63,63},{224,225,225,224}},
				{{4},{233,216,217,234},{62,62,62,62},{224,217,216,225}},
				{{4},{233,235,223,216},{62,62,62,62},{224,226,223,217}},
				{{4},{233,225,227,235},{63,63,63,63},{224,224,226,226}},
				{{4},{234,236,228,226},{63,63,63,63},{225,227,227,225}},
				{{4},{234,217,218,236},{62,62,62,62},{225,216,218,227}},
				{{4},{235,237,222,223},{62,62,62,62},{226,228,222,223}},
				{{4},{235,227,229,237},{63,63,63,63},{226,226,228,228}},
				{{4},{236,238,230,228},{63,63,63,63},{227,229,229,227}},
				{{4},{236,218,219,238},{62,62,62,62},{227,218,219,229}},
				{{4},{237,239,221,222},{62,62,62,62},{228,230,221,222}},
				{{4},{237,229,231,239},{63,63,63,63},{228,228,230,230}},
				{{4},{238,240,232,230},{63,63,63,63},{229,231,231,229}},
				{{4},{238,219,220,240},{62,62,62,62},{229,219,220,231}},
				{{4},{239,240,220,221},{62,62,62,62},{230,231,220,221}},
				{{4},{239,231,232,240},{63,63,63,63},{230,230,231,231}},
				{{4},{241,242,243},{64,64,64},{13,232,227}},
				{{4},{241,243,244},{64,64,64},{13,227,231}},
				{{4},{241,244,245},{64,64,64},{13,231,233}},
				{{4},{241,245,242},{64,64,64},{13,233,232}},
				{{4},{242,246,243},{64,64,64},{232,215,227}},
				{{4},{243,246,244},{64,64,64},{227,215,231}},
				{{4},{244,246,245},{64,64,64},{231,215,233}},
				{{4},{245,246,242},{64,64,64},{233,215,232}},
				{{4},{248,247,249},{62,62,62},{207,13,214}},
				{{4},{249,247,250},{62,62,62},{214,13,213}},
				{{4},{250,247,251},{62,62,62},{213,13,212}},
				{{4},{251,247,252},{62,62,62},{212,13,211}},
				{{4},{252,247,253},{62,62,62},{211,13,210}},
				{{4},{253,247,254},{62,62,62},{210,13,209}},
				{{4},{254,247,255},{62,62,62},{209,13,208}},
				{{4},{255,247,248},{62,62,62},{208,13,207}},
				{{4},{257,264,256},{62,62,62},{223,215,217}},
				{{4},{258,264,257},{62,62,62},{222,215,223}},
				{{4},{259,264,258},{62,62,62},{221,215,222}},
				{{4},{260,264,259},{62,62,62},{220,215,221}},
				{{4},{261,264,260},{62,62,62},{219,215,220}},
				{{4},{262,264,261},{62,62,62},{218,215,219}},
				{{4},{263,264,262},{62,62,62},{216,215,218}},
				{{4},{256,264,263},{62,62,62},{217,215,216}},
				{{4},{266,265,248,249},{62,62,62,62},{226,224,207,214}},
				{{4},{248,265,267,255},{62,62,62,62},{207,224,225,208}},
				{{4},{268,266,249,250},{62,62,62,62},{228,226,214,213}},
				{{4},{255,267,269,254},{62,62,62,62},{208,225,227,209}},
				{{4},{270,268,250,251},{62,62,62,62},{230,228,213,212}},
				{{4},{254,269,271,253},{62,62,62,62},{209,227,229,210}},
				{{4},{272,270,251,252},{62,62,62,62},{231,230,212,211}},
				{{4},{253,271,272,252},{62,62,62,62},{210,229,231,211}},
				{{4},{274,273,265,266},{63,63,63,63},{226,224,224,226}},
				{{4},{256,273,274,257},{62,62,62,62},{217,224,226,223}},
				{{4},{275,273,256,263},{62,62,62,62},{225,224,217,216}},
				{{4},{265,273,275,267},{63,63,63,63},{224,224,225,225}},
				{{4},{276,274,266,268},{63,63,63,63},{228,226,226,228}},
				{{4},{257,274,276,258},{62,62,62,62},{223,226,228,222}},
				{{4},{277,275,263,262},{62,62,62,62},{227,225,216,218}},
				{{4},{267,275,277,269},{63,63,63,63},{225,225,227,227}},
				{{4},{278,276,268,270},{63,63,63,63},{230,228,228,230}},
				{{4},{258,276,278,259},{62,62,62,62},{222,228,230,221}},
				{{4},{279,277,262,261},{62,62,62,62},{229,227,218,219}},
				{{4},{269,277,279,271},{63,63,63,63},{227,227,229,229}},
				{{4},{280,278,270,272},{63,63,63,63},{231,230,230,231}},
				{{4},{259,278,280,260},{62,62,62,62},{221,230,231,220}},
				{{4},{280,279,261,260},{62,62,62,62},{231,229,219,220}},
				{{4},{271,279,280,272},{63,63,63,63},{229,229,231,231}},
				{{4},{282,281,283},{64,64,64},{232,13,228}},
				{{4},{283,281,284},{64,64,64},{228,13,231}},
				{{4},{284,281,285},{64,64,64},{231,13,227}},
				{{4},{285,281,282},{64,64,64},{227,13,232}},
				{{4},{286,282,283},{64,64,64},{215,232,228}},
				{{4},{286,283,284},{64,64,64},{215,228,231}},
				{{4},{286,284,285},{64,64,64},{215,231,227}},
				{{4},{286,285,282},{64,64,64},{215,227,232}}
				};
				specialModel=new Modchu_ModelRenderer[4];
//				loadModel[0] = new ModchuModel_ModelRenderer(this);
				for(int i=0;i<specialModel.length;i++)
					specialModel[i] = new Modchu_ModelRenderer(this);				for(int i=0;i<v.length;i++){
					float expandX = v[i][0]*psize*0.2f;
					float expandY = v[i][1]*psize*0.2f;
					float expandZ = v[i][2]*psize*0.2f;
					v[i][0]+=expandX;
					v[i][1]+=expandY;
					v[i][2]+=expandZ;
					v[i][1]*=-1f;
					v[i][2]*=-1f;
				}
				for(int i=0;i<vn.length;i++){
					vn[i][1]*=-1f;
					vn[i][2]*=-1f;
				}				for(int i=0;i<faceis.length;i++){
					int k=faceis[i][1].length;
					float ver[][]=new float[k][3];
					float verTex[][]=new float[k][2];
					float verN[][]=new float[k][3];
				//	if(faceis[i][0][0]==1){
						for(int j=0;j<k;j++){
							ver[j]=v[faceis[i][1][j]];
							verTex[j]=vt[faceis[i][2][j]];
							verN[j]=vn[faceis[i][3][j]];
						}
						specialModel[faceis[i][0][0]-1].addPlateFreeShape(ver,verTex,verN);
				//	}
				}				float offsetY=24f;//*(1f+psize*0.2f);
				float adjustX=mainFrame.rotationPointX;
				float adjustY=mainFrame.rotationPointY;
				float adjustZ=mainFrame.rotationPointZ;
				//		髪留め
				specialModel[1].rotationPointX=adjustX+bipedHead.rotationPointX;
				specialModel[1].rotationPointY=(offsetY-adjustY-bipedHead.rotationPointY)*(1f+psize*0.2f);
				specialModel[1].rotationPointZ=adjustZ-bipedHead.rotationPointZ-0.05f;				//		おさげ
				specialModel[3].rotationPointX=-adjustX-bipedHead.rotationPointX;
				specialModel[3].rotationPointY=(offsetY-adjustY-bipedHead.rotationPointY+0.3f)*(1f+psize*0.2f);
				specialModel[3].rotationPointZ=-adjustZ-bipedHead.rotationPointZ-0.2f;				//			スカート
				specialModel[0].rotationPointX=-adjustX-Skirt.rotationPointX;
				specialModel[0].rotationPointY=(offsetY-adjustY-Skirt.rotationPointY)*(1f+psize*0.2f);
				specialModel[0].rotationPointZ=-adjustZ-Skirt.rotationPointZ;				//			りぼん
				specialModel[2].rotationPointX=-adjustX-Skirt.rotationPointX;
				specialModel[2].rotationPointY=(offsetY-adjustY-Skirt.rotationPointY)*(1f+psize*0.2f);
				specialModel[2].rotationPointZ=-adjustZ-Skirt.rotationPointZ;
	}
}