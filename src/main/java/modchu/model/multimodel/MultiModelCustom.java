package modchu.model.multimodel;import modchu.lib.Modchu_Debug;import modchu.lib.Modchu_Reflect;import modchu.lib.characteristic.Modchu_ModelRenderer;import modchu.lib.replacepoint.Modchu_ModelMultiReplacePoint;import modchu.model.ModchuModel_CustomModel;import modchu.model.ModchuModel_IModelCaps;import modchu.model.ModchuModel_ModelCapsHelper;import net.minecraft.src.MultiModel;public abstract class MultiModelCustom extends MultiModel {	public ModchuModel_CustomModel customModel;	public Modchu_ModelRenderer dummy;	public MultiModelCustom()	{		this(0.0F);	}	public MultiModelCustom(float f)	{		this(f, 0.0F);	}	public MultiModelCustom(float f, float f1)	{		this(f, f1 , 64, 32);	}	public MultiModelCustom(float f, float f1, int i, int j) {		super(f, f1, i, j);		dummy = new Modchu_ModelRenderer(this, 0, 0);		dummy.addBox(0.0F, 0.0F, 0.0F, 0, 0, 0, f);	}	@Override	public void initModel(float f, float f1) {		initModel(f, f1, true);	}	public void initModel(float f, float f1, boolean isAfterInit) {		bipedHead = new Modchu_ModelRenderer(this);		bipedHeadwear = new Modchu_ModelRenderer(this);		bipedBody = new Modchu_ModelRenderer(this);		bipedRightArm = new Modchu_ModelRenderer(this);		bipedLeftArm = new Modchu_ModelRenderer(this);		bipedRightLeg = new Modchu_ModelRenderer(this);		bipedLeftLeg = new Modchu_ModelRenderer(this);		mainFrame = new Modchu_ModelRenderer(this);		Skirt = new Modchu_ModelRenderer(this);		bipedHead.addChild(bipedHeadwear);		bipedBody.addChild(bipedHead);		bipedBody.addChild(bipedRightArm);		bipedBody.addChild(bipedLeftArm);		bipedBody.addChild(bipedRightLeg);		bipedBody.addChild(bipedLeftLeg);		mainFrame.addChild(bipedBody);		if (isAfterInit) afterInit(f, f1);	}	@Override	public void actionPartsInit(float f, float f1) {		rightArm = new Modchu_ModelRenderer(this);		rightArmPlus = new Modchu_ModelRenderer(this);		rightArm2 = new Modchu_ModelRenderer(this);		rightArmPlus2 = new Modchu_ModelRenderer(this);		rightHand = new Modchu_ModelRenderer(this);		leftArm = new Modchu_ModelRenderer(this);		leftArmPlus = new Modchu_ModelRenderer(this);		leftArm2 = new Modchu_ModelRenderer(this);		leftArmPlus2 = new Modchu_ModelRenderer(this);		leftHand = new Modchu_ModelRenderer(this);		rightLeg = new Modchu_ModelRenderer(this);		rightLegPlus = new Modchu_ModelRenderer(this);		rightLeg2 = new Modchu_ModelRenderer(this);		rightLegPlus2 = new Modchu_ModelRenderer(this);		leftLeg = new Modchu_ModelRenderer(this);		leftLegPlus = new Modchu_ModelRenderer(this);		leftLeg2 = new Modchu_ModelRenderer(this);		leftLegPlus2 = new Modchu_ModelRenderer(this);		rightHand.showModel = leftHand.showModel = rightArm.showModel =				leftArm.showModel = rightArmPlus.showModel = rightArmPlus2.showModel =				leftArmPlus.showModel = leftArmPlus2.showModel = rightLegPlus.showModel =				rightLegPlus2.showModel = leftLegPlus.showModel = leftLegPlus2.showModel =				rightArm2.showModel = leftArm2.showModel = rightLeg.showModel =				rightLeg2.showModel = leftLeg.showModel = leftLeg2.showModel = false;	}	@Override	public void skirtFloatsInit(float f, float f1) {		if (ModchuModel_ModelCapsHelper.getCapsValueInt(this, caps_skirtFloats) < 2) return;		SkirtTop = new Modchu_ModelRenderer(this, 8, 16);		SkirtFront = new Modchu_ModelRenderer(this, 8, 24);		SkirtRight = new Modchu_ModelRenderer(this, 0, 24);		SkirtLeft = new Modchu_ModelRenderer(this, 16, 24);		SkirtBack = new Modchu_ModelRenderer(this, 24, 24);		if (customModel != null) customModel.skirtFloatsInit(f, f1);	}    public void superrender(ModchuModel_IModelCaps entityCaps, float f, float f1, float ticksExisted, float pheadYaw, float pheadPitch, float f5) {		setRotationAngles(f, f1, ticksExisted, pheadYaw, pheadPitch, f5, entityCaps);		if (customModel != null) {			Object renderMainframe = customModel.mainModel != null ? Modchu_Reflect.getFieldObject(Modchu_ModelMultiReplacePoint.class, "mainFrame", customModel.mainModel) : mainFrame;			if (renderMainframe != null) {				Modchu_Reflect.invokeMethod("Render", "render", new Class[]{ float.class }, renderMainframe, new Object[]{ f5 });				Modchu_Debug.mDebug("superrender ");			} else {				Modchu_Debug.mDebug("superrender renderMainframe == null !!");			}		} else {			Modchu_Debug.mDebug("superrender customModel == null !!");		}		if (entityCaps != null) {			renderStabilizer(entityCaps, f, f1, ticksExisted, pheadYaw, pheadPitch, f5);		}	}	@Override	public void render(ModchuModel_IModelCaps entityCaps, float f, float f1, float ticksExisted, float pheadYaw, float pheadPitch, float f5, boolean pIsRender) {		setRotationAngles(f, f1, ticksExisted, pheadYaw, pheadPitch, f5, entityCaps);		if (customModel.render(entityCaps, f, f1, ticksExisted, pheadYaw, pheadPitch, f5, pIsRender)) super.render(entityCaps, f, f1, ticksExisted, pheadYaw, pheadPitch, f5, pIsRender);	}	@Override	public void setLivingAnimations(ModchuModel_IModelCaps entityCaps, float f, float f1, float renderPartialTicks) {		super.setLivingAnimations(entityCaps, f, f1, renderPartialTicks);		customModel.setLivingAnimations(entityCaps, f, f1, renderPartialTicks);	}	@Override	public void setLivingAnimationsLM(ModchuModel_IModelCaps entityCaps, float f, float f1, float renderPartialTicks) {		super.setLivingAnimationsLM(entityCaps, f, f1, renderPartialTicks);		customModel.setLivingAnimationsLM(entityCaps, f, f1, renderPartialTicks);	}    @Override	public void setRotationAnglesLM(float f, float f1, float ticksExisted, float pheadYaw, float pheadPitch, float f5, ModchuModel_IModelCaps entityCaps) {    	if (customModel.setRotationAnglesLM(f, f1, ticksExisted, pheadYaw, pheadPitch, f5, entityCaps)) super.setRotationAnglesLM(f, f1, ticksExisted, pheadYaw, pheadPitch, f5, entityCaps);	}	@Override	public void renderItems(ModchuModel_IModelCaps entityCaps) {		if (customModel.renderItems(entityCaps)) super.renderItems(entityCaps);	}	@Override	public void defaultPartsSettingBefore(ModchuModel_IModelCaps entityCaps) {		if (customModel.defaultPartsSettingBefore(entityCaps)) super.defaultPartsSettingBefore(entityCaps);	}	@Override	public void defaultPartsSettingAfter(ModchuModel_IModelCaps entityCaps) {		if (customModel.defaultPartsSettingAfter(entityCaps)) super.defaultPartsSettingAfter(entityCaps);	}	@Override	public void showModelSettingReflects(ModchuModel_IModelCaps entityCaps) {		if (customModel.showModelSettingReflects(entityCaps)) super.showModelSettingReflects(entityCaps);	}	@Override	public void actionInit(ModchuModel_IModelCaps entityCaps, int i) {		if (customModel.actionInit(entityCaps, i)) super.actionInit(entityCaps, i);	}	@Override	public void actionRelease(ModchuModel_IModelCaps entityCaps, int i) {		if (customModel.actionRelease(entityCaps, i)) super.actionRelease(entityCaps, i);	}	@Override	public void action(float f, float f1, float f2, float f3, float f4, float f5, int i, ModchuModel_IModelCaps entityCaps) {		if (customModel.action(f, f1, f2, f3, f4, f5, i, entityCaps)) super.action(f, f1, f2, f3, f4, f5, i, entityCaps);	}	@Override	public float getHeight() {		return getHeight(null);	}	@Override	public float getHeight(ModchuModel_IModelCaps pEntityCaps) {		float f = 0.0F;		if (customModel != null) f = customModel.getHeight(pEntityCaps);		return f > 0.0F ? f : 1.35F;	}	@Override	public float getWidth() {		return getWidth(null);	}	@Override	public float getWidth(ModchuModel_IModelCaps pEntityCaps) {		float f = 0.0F;		if (customModel != null) f = customModel.getWidth(pEntityCaps);		return f > 0.0F ? f : 0.5F;	}	@Override	public float getyOffset() {		return getyOffset(null);	}	@Override	public float getyOffset(ModchuModel_IModelCaps pEntityCaps) {		float f = -100.0F;		if (customModel != null) f = customModel.getyOffset(pEntityCaps);		return f > -100.0F ? f : 1.62F;	}	@Override	public float getMountedYOffset() {		return getMountedYOffset(null);	}	@Override	public float getRidingyOffset(ModchuModel_IModelCaps pEntityCaps) {		float f = -100.0F;		if (customModel != null) f = customModel.getRidingyOffset(pEntityCaps);		return f > -100.0F ? f : 1.62F;	}	@Override	public float getRidingHeight(ModchuModel_IModelCaps pEntityCaps) {		float f = 0.0F;		if (customModel != null) f = customModel.getRidingHeight(pEntityCaps);		return f > 0.0F ? f : 1.35F;	}	@Override	public float getRidingWidth(ModchuModel_IModelCaps pEntityCaps) {		float f = 0.0F;		if (customModel != null) f = customModel.getRidingWidth(pEntityCaps);		return f > 0.0F ? f : 0.5F;	}	@Override	public float getMountedYOffset(ModchuModel_IModelCaps pEntityCaps) {		float f = 0.0F;		if (customModel != null) f = customModel.getMountedYOffset(pEntityCaps);		return f > 0.0F ? f : 0.75F;	}	@Override	public double getSittingyOffset(ModchuModel_IModelCaps pEntityCaps) {		double d = -100.0F;		if (customModel != null) d = customModel.getSittingyOffset(pEntityCaps);		return d > -100.0D ? d : -0.35D;	}	@Override	public float ridingViewCorrection(ModchuModel_IModelCaps pEntityCaps) {		float f = -100.0F;		if (customModel != null) f = customModel.ridingViewCorrection(pEntityCaps);		return f > -100.0F ? f : 0.0F;	}	@Override	public float getModelScale(ModchuModel_IModelCaps pEntityCaps) {		float f = 0.0F;		if (customModel != null) f = customModel.getModelScale(pEntityCaps);		return f > 0.0F ? f : 0.9375F;	}	@Override	public void setArmorBipedHeadShowModel(ModchuModel_IModelCaps entityCaps, boolean b) {		if (customModel.setArmorBipedHeadShowModel(entityCaps, b)) super.setArmorBipedHeadShowModel(entityCaps, b);	}	@Override	public void setArmorBipedBodyShowModel(ModchuModel_IModelCaps entityCaps, boolean b) {		if (customModel.setArmorBipedBodyShowModel(entityCaps, b)) super.setArmorBipedBodyShowModel(entityCaps, b);	}	@Override	public void setArmorBipedRightArmShowModel(ModchuModel_IModelCaps entityCaps, boolean b) {		if (customModel.setArmorBipedRightArmShowModel(entityCaps, b)) super.setArmorBipedRightArmShowModel(entityCaps, b);	}	@Override	public void setArmorBipedLeftArmShowModel(ModchuModel_IModelCaps entityCaps, boolean b) {		if (customModel.setArmorBipedLeftArmShowModel(entityCaps, b)) super.setArmorBipedLeftArmShowModel(entityCaps, b);	}	@Override	public void setArmorBipedRightLegShowModel(ModchuModel_IModelCaps entityCaps, boolean b) {		if (customModel.setArmorBipedRightLegShowModel(entityCaps, b)) super.setArmorBipedRightLegShowModel(entityCaps, b);	}	@Override	public void setArmorBipedLeftLegShowModel(ModchuModel_IModelCaps entityCaps, boolean b) {		if (customModel.setArmorBipedLeftLegShowModel(entityCaps, b)) super.setArmorBipedLeftLegShowModel(entityCaps, b);	}	@Override	public void setArmorSkirtShowModel(ModchuModel_IModelCaps entityCaps, boolean b) {		if (customModel.setArmorSkirtShowModel(entityCaps, b)) super.setArmorSkirtShowModel(entityCaps, b);	}	@Override	public Object getCapsValue(int pIndex, Object ...pArg) {		return customModel != null ? customModel.getCapsValue(pIndex, pArg) : super.getCapsValue(pIndex, pArg);	}	public Object superGetCapsValue(int pIndex, Object ...pArg) {		return super.getCapsValue(pIndex, pArg);	}	@Override	public boolean setCapsValue(int pIndex, Object ...pArg) {		return customModel != null ? customModel.setCapsValue(pIndex, pArg) : super.setCapsValue(pIndex, pArg);	}	public boolean superSetCapsValue(int pIndex, Object ...pArg) {		return super.setCapsValue(pIndex, pArg);	}	@Override	public void changeModel(ModchuModel_IModelCaps entityCaps) {		boolean b = false;		if (customModel != null) b = customModel.changeModel(entityCaps);		if (b) super.changeModel(entityCaps);	}	@Override	public void changeColor(ModchuModel_IModelCaps entityCaps) {		boolean b = false;		if (customModel != null) b = customModel.changeColor(entityCaps);		if (b) super.changeColor(entityCaps);	}	@Override	public void setDefaultPause(float f, float f1, float f2, float f3, float f4, float f5, ModchuModel_IModelCaps entityCaps) {		boolean b = false;		if (customModel != null) b = customModel.setDefaultPause(f, f1, f2, f3, f4, f5, entityCaps);		if (b) super.setDefaultPause(f, f1, f2, f3, f4, f5, entityCaps);	}	@Override	public float[] getArmorModelsSize() {		float[] f = null;		if (customModel != null) f = customModel.getArmorModelsSize();		return f != null ? f : new float[] {0.1F, 0.5F};	}	@Override	public void renderFirstPersonHand(ModchuModel_IModelCaps entityCaps, float f) {		boolean b = false;		if (customModel != null) b = customModel.renderFirstPersonHand(entityCaps, f);		if (b) super.renderFirstPersonHand(entityCaps, f);	}	@Override	public void setRotationAnglesfirstPerson(float f, float f1, float f2, float f3, float f4, float f5, ModchuModel_IModelCaps entityCaps) {		boolean b = false;		if (customModel != null) b = customModel.setRotationAnglesfirstPerson(f, f1, f2, f3, f4, f5, entityCaps);		if (b) super.setRotationAnglesfirstPerson(f, f1, f2, f3, f4, f5, entityCaps);	}	@Override	public int showArmorParts(int i, int i2) {		int i1 = -1;		if (customModel != null) i1 = customModel.showArmorParts(null, i, i2);		if (i1 < -1) super.showArmorParts(i, i2);		return i1;	}	@Override	public int showArmorParts(ModchuModel_IModelCaps entityCaps, int i, int i2) {		int i1 = -1;		if (customModel != null) i1 = customModel.showArmorParts(entityCaps, i, i2);		if (i1 < -1) super.showArmorParts(entityCaps, i, i2);		return i1;	}	@Override	public void defaultSkirtFloatsAddChild() {		boolean b = false;		if (customModel != null) b = customModel.defaultSkirtFloatsAddChild();		if (b) super.defaultSkirtFloatsAddChild();	}	@Override	public void actionPartsAddChild() {		boolean b = false;		if (customModel != null) b = customModel.actionPartsAddChild();		if (b) super.actionPartsAddChild();	}	@Override	public void boneProcessing(float f, float f1, float f2, float f3, float f4, float f5, ModchuModel_IModelCaps entityCaps) {		boolean b = false;		if (customModel != null) b = customModel.boneProcessing(f, f1, f2, f3, f4, f5, entityCaps);		if (b) super.boneProcessing(f, f1, f2, f3, f4, f5, entityCaps);	}	@Override	public void defaultAddChild() {		Modchu_Debug.mDebug("defaultAddChild 1");		boolean b = false;		if (customModel != null) b = customModel.defaultAddChild();		if (b) super.defaultAddChild();	}}