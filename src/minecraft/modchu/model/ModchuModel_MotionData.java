package modchu.model;import java.util.ArrayList;import java.util.HashMap;import java.util.LinkedList;import java.util.List;import modchu.lib.Modchu_Debug;public class ModchuModel_MotionData {	private int maxFrame = 0;	private int maxMotionFrame = 0;	private List<String> nameList = new LinkedList<String>();	private ArrayList<String> nameArrayList = new ArrayList<String>();	private HashMap<String, float[]> dataList = new HashMap();	private HashMap<String, List<Integer>> frameStringMap = new HashMap();	private boolean debug = false;	public ModchuModel_MotionData() {	}	public int getFrame() {		return maxFrame;	}	public void setFrame(int i) {		maxFrame = i;	}	public HashMap<String, List<Integer>> getFrameStringMap() {		return frameStringMap;	}	public void setFrameStringMap(HashMap<String, List<Integer>> map) {		frameStringMap = map;	}	public void putFrameStringMap(String s) {		if (!frameStringMap.containsKey(s)) {			List list = new LinkedList();			putFrameStringMap(s, list);		}	}	public void putFrameStringMap(String s, List<Integer> list) {		frameStringMap.put(s, list);	}	public List<Integer> getFrameStringList(String s) {		return s != null				&& !s.isEmpty() ? frameStringMap.get(s) : null;	}	public List<String> getNameList() {		return nameList;	}	public void setNameList(List list) {		nameList = list;	}	public void addNameList(String s) {		if (debug) Modchu_Debug.mDebug("addNameList s="+s);		nameList.add(s);	}	public void addNameList(int i, String s) {		nameList.add(i, s);	}	public String getName(int i) {		//if (debug) Modchu_Debug.mDebug("getName nameList.get(i)="+nameList.get(i));		return i > -1 ? nameList.get(i) : null;	}	public void nameListClear() {		nameList.clear();	}	public HashMap<String, float[]> getDataList() {		return dataList;	}	public void setDataList(HashMap map) {		dataList = map;	}	public void putDataList(String s, float[] f) {		dataList.put(s, f);		if (debug) Modchu_Debug.mDebug("putDataList dataList.get="+dataList.get(s)+" s="+s);	}	public float[] getData(String s, int frameCount) {		//if (debug) Modchu_Debug.mDebug("getData s="+s+" frameCount="+frameCount);		s = s + ","+ frameCount;		//if (debug) Modchu_Debug.mDebug("getData s="+s);		//if (debug) Modchu_Debug.mDebug("getData ="+(s != null ? dataList.get(s) : null));		//if (debug) Modchu_Debug.mDebug("getData getHashMapKey 0="+Modchu_Main.getHashMapKey(dataList, 0));		return s != null ? dataList.get(s) : null;	}	public void dataListClear() {		dataList.clear();	}	public ArrayList<String> getNameArrayList() {		return nameArrayList;	}	public void setNameArrayList(ArrayList list) {		nameArrayList = list;	}	public void addNameArrayList(String s) {		if (debug) Modchu_Debug.mDebug("addNameArrayList s="+s);		if (!nameArrayList.contains(s)) nameArrayList.add(s);	}	public String getArrayName(int i) {		//if (debug) Modchu_Debug.mDebug("getArrayName nameArrayList.get(i)="+nameArrayList.get(i));		return i > -1 ? nameArrayList.get(i) : null;	}	public void nameArrayListClear() {		nameArrayList.clear();	}	public int getMaxMotionFrame() {		return maxMotionFrame;	}	public void setMaxMotionFrame(int i) {		maxMotionFrame = i;	}	public float[] getPartsData(int i, int frameCount) {		//if (debug) Modchu_Debug.mDebug("getPartsData i="+i+" i1="+i1);		String s = getArrayName(i);		frameCount = getDataFrame(i, frameCount);		if (debug) Modchu_Debug.mDebug("getPartsData frameCount="+frameCount);		return getData(s, frameCount);	}	public float[] getPartsData(String s, int frameCount) {		frameCount = getDataFrame(s, frameCount);		return getData(s, frameCount);	}	private int getDataFrame(int i, int frameCount) {		if (debug) Modchu_Debug.mDebug("getDataFrame getName("+i+")="+getName(i));		return getDataFrame(getName(i), frameCount);	}	private int getDataFrame(String s, int frameCount) {		//if (debug) Modchu_Debug.mDebug("getDataFrame s.isEmpty()="+s.isEmpty());		int i2 = -1;		if (s != null				&& !s.isEmpty()) ;else {					if (debug) Modchu_Debug.mDebug("getDataFrame s else return");					return i2;				}		List<Integer> list = getFrameStringList(s);		//if (debug) Modchu_Debug.mDebug("getDataFrame list.isEmpty()="+list.isEmpty());		if (list != null				&& !list.isEmpty()) ;else {					if (debug) Modchu_Debug.mDebug("getDataFrame list else return");					return i2;				}		//if (debug) Modchu_Debug.mDebug("getDataFrame 2");		i2 = 0;		for (int i1 = 0; i1 < list.size(); i1++) {			if (list.get(i1) > frameCount) {				i2 = i1 > 0 ? list.get(i1 - 1) : 0;				//if (debug) Modchu_Debug.mDebug("getDataFrame 3 i2="+i2);				break;			}		}		//if (debug) Modchu_Debug.mDebug("getDataFrame end return i2="+i2);		return i2;	}}